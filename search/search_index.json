{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sigma","text":"<p>Sigma is a collection of tools to streamline the trainings for Pipal Academy.</p> <p>See Lab Setup.</p>"},{"location":"assignments/","title":"Assignments","text":"<p>One of the important elements of the trainings of Pipal Academy is giving assignments to the students. Sigma CLI provides utilities to create and grade assignments.</p>"},{"location":"assignments/#assignment-format","title":"Assignment Format","text":"<p>Each assignment is specified in an YAML file.</p> <pre><code>title: Assignment 01\ndescription: |\n    Please solve all the following problems.\n    You have 2 days to solve all the problems and submit the assignment.\nproblems:\n    - mean\n    - product\n    - digit-count\n</code></pre> <p>The problems are taken from the private repository python-practice-problems.</p>"},{"location":"assignments/#creating-assignments","title":"Creating assignments","text":"<p>To create an assignment, create an YAML file for the assignment.</p> <pre><code>$ cat assignment-01.yml\ntitle: Assignment 01\ndescription: |\n    Please solve all the following problems.\n    You have 2 days to solve all the assignments.\nproblems:\n    - mean\n    - product\n    - digit-count\n</code></pre> <p>To generate a notebook for the assignment, run the following command.</p> <pre><code>$ sigma create-assignment assignment-01.yml\ncreated assignment-01.ipynb\n</code></pre> <p>Please note that the created the notebook file will have the same name as YAML file, but with extension <code>.ipynb</code>.</p> <p>Note</p> <p>If you want to try creating assignments in your local dev environment, you may have to configure the path to the problems directory. By default, it is assumed that the problems are at <code>/opt/problems</code>.</p> <p>You can specify a different path by setting the environment variable <code>SIGMA_PROBLEMS_ROOT</code>.</p> <pre><code>$ export SIGMA_PROBLEMS_ROOT=/home/anand/github/pipalacademy/python-practice-problems/python\n$ sigma create-assignment assignment-01.yml\ncreated assignment-01.iynb\n</code></pre>"},{"location":"assignments/#collecting-assignments","title":"Collecting Assignments","text":"<p>After the deadline for an assignment, the instructor need to collect the assignment manually or through a cron job. There is no way for the students to submit their own assignments.</p> <p>The assignment solutions will be maintaining in the directory <code>training-data/assignment-submissions</code>.</p> <p>To collect an assignment:</p> <pre><code>$ sigma collect-assignment assignment-01\nSubmitted /home/jupyter-alice/assignment-01.ipynb to training-data/assignment-submissions/assignment-01/alice/assignment-01.ipynb\nSubmitted /home/jupyter-bob/assignment-01.ipynb to training-data/assignment-submissions/assignment-01/bob/assignment-01.ipynb\n</code></pre> <p>By default, sigma assumes that the assignment solutions are in the home directory. Sometimes, the assignments are kept in <code>assignments/</code> directory. In such a case, pass <code>--assignment-dir</code> option to tell sigma to take that into account.</p> <pre><code>$ sigma collect-assignment assignment-01 --assignment-dir\nSubmitted /home/jupyter-alice/assignment-01.ipynb to training-data/assignment-submissions/assignment-01/alice/assignment-01.ipynb\nSubmitted /home/jupyter-bob/assignment-01.ipynb to training-data/assignment-submissions/assignment-01/bob/assignment-01.ipynb\n</code></pre>"},{"location":"lab-setup/","title":"Lab Setup","text":"<p>The lab server provides a jupyter lab instance for every participant using JupyterHub.</p>"},{"location":"lab-setup/#services","title":"Services","text":"<p>The services that run on the server are:</p> <ul> <li>The Little Jupyter Hub (TLJH)</li> <li>live-notes</li> <li>sigma (the dashboard)</li> </ul>"},{"location":"lab-setup/#paths","title":"Paths","text":"<p>Most of the files used by the setup are in /opt.</p> <pre><code>files - sample files used by the problems\nproblems - all the problems available via the magic command %load_problem\npython-practice-problems - the repository having the problems\nsigma - the sigma repository\ntljh - TLJH main directory\ntraining - the repository of training notes\n</code></pre> <p>Some of these paths are symlinks to other directories.</p>"},{"location":"lab-setup/#the-urls","title":"The URLs","text":"<p>The lab server is typically setup at https://lab.pipal.in/. Sometimes, we use the client name as a prefix (for example <code>arcesium-lab</code>).</p> <p>The live-notes service is available at https://live.lab.pipal.in and the dashboard is available at https://dashboard.lab.pipal.in.</p> <p>The routing of all these domains is done by the Traefik router which comes as part of TLJH setup. Custom configuration is placed in <code>/opt/tljh/state/rules</code> to enable that.</p>"},{"location":"lab-setup/#restarting-services","title":"Restarting Services","text":"<p>Restart JupyterHub:</p> <pre><code>$ sudo tljh-config reload\n</code></pre> <p>Restart Traefik proxy:</p> <pre><code>$ sudo tljh-config reload proxy\n</code></pre> <p>Restart Live Notes:</p> <pre><code>$ sudo systemctl restart live-notes\n</code></pre> <p>Restart dashboard:</p> <pre><code>$ sudo systemctl restart sigma\n</code></pre>"},{"location":"lab-setup/#logs","title":"Logs","text":"<p>Logs can be viewed using <code>journalctl</code> command by passing the service name.</p> <p>To see the last 50 entries of the log:</p> <pre><code>$ sudo journalctl -n 50 -u $APP_NAME\n</code></pre> <p>To follow the logs (show new messages as they come):</p> <pre><code>$ sudo journalctl -n 50 -f -u $APP_NAME\n</code></pre>"},{"location":"lab-setup/#jupyterhub-logs","title":"JupyterHub Logs","text":"<pre><code>$ sudo journalctl -u jupyterhub\n</code></pre>"},{"location":"lab-setup/#traefik-proxy-logs","title":"Traefik Proxy Logs","text":"<pre><code>$ sudo journalctl -u traefik\n</code></pre>"},{"location":"lab-setup/#user-server-logs","title":"User Server Logs","text":"<pre><code>$ sudo journalctl -u jupyter-&lt;username&gt;\n</code></pre>"},{"location":"lab-setup/#live-notes-logs","title":"Live Notes Logs","text":"<pre><code>$ sudo journalctl -u live-notes\n</code></pre>"},{"location":"lab-setup/#dashboard-logs","title":"Dashboard Logs","text":"<pre><code>$ sudo journalctl -u sigma\n</code></pre>"},{"location":"lab-setup/#journalctl-tips","title":"journalctl tips","text":"<p>Pass <code>-n N</code> to see last <code>N</code> entries. For example:</p> <pre><code>$ sudo journalctl -u live-notes -n 50\n</code></pre> <p>Pass <code>-f</code> to follow the logs to see the live output. For, example:</p> <pre><code>$ sudo journalctl -u live-notes -n 50 -f\n</code></pre>"},{"location":"lab-setup/#troubleshooting","title":"Troubleshooting","text":""},{"location":"lab-setup/#load_problem-and-verify_problem-not-working","title":"<code>%%load_problem</code> and <code>%%verify_problem</code> not working","text":"<p>This can happen when the juputer startup script is not properly installed for a user.</p> <p>Sigma install startup script at <code>~/.ipython/profile_default/startup/startup.py</code>. You can check if that file is missing by running the following command. If the file is missing, it will give an error.</p> <pre><code>$ sudo ls -l /home/jupyter-&lt;username&gt;/.ipython/profile_default/startup/startup.py\n-rw-r--r-- 1 jupyter-xxx jupyter-xxx 42 Jun 18 18:39 /home/jupyter-xxx/.ipython/profile_default/startup/startup.py\n</code></pre> <p>If the file is missing, do the following to create it.</p> <pre><code>$ sudo su jupyter-&lt;username&gt;\n$ cd\n$ mkdir -p ~/.ipython/profile_default/startup\n$ cd  ~/.ipython/profile_default/startup\n$ echo 'from sigma import magic; magic.register()' &gt; startup.py\n</code></pre> <p>Restart the kernel of the notebook to load the magic commands.</p>"}]}